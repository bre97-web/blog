---
interface Props {
    title: string;
    description: string;
    fileName: string;
    creationTime: Date;
    slug: string;
    tags?: Array<string>;
}

const { title, description, tags = [], slug } = Astro.props;
---

<a href={`/blog/${slug}`} class="blog-list-item">
    <section>
        <h1
            class="md-typescale-title-medium font-medium on-surface line-clamp-2"
        >
            {title}
        </h1>
        <p class="md-typescale-body-medium on-surface-variant line-clamp-3">
            {description}
        </p>
    </section>

    {
        tags && (
            <ul class="tags">
                {tags.map((tag) => (
                    <li class="md-typescale-body-small">{tag}</li>
                ))}
            </ul>
        )
    }
    <md-ripple></md-ripple>
</a>

<style>
    .blog-list-item {
        @apply rounded-2xl surface-container-highest overflow-clip relative z-0 flex flex-col justify-between;
        @apply p-4 w-full md:max-w-[230px] lg:max-w-[336px];
        --md-ripple-hover-color: var(--md-sys-color-primary);
        transition-duration: 200ms;

        & > section {
            @apply mb-4 flex flex-col gap-2;
        }
        & > ul.tags {
            @apply flex flex-wrap gap-2 select-none;

            & > li {
                @apply on-surface-variant relative surface rounded-md px-2 py-1 pointer-events-none;
            }
        }
    }
    .blog-list-item:hover {
    }
    .blog-list-item:active,
    .blog-list-item:hover:active {
        @apply rounded-[24px];
    }
</style>
