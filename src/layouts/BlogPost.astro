---
import "../styles/blog.css";

import type { CollectionEntry } from "astro:content";
import BaseHead from "../core/head/components/BaseHead.astro";
import FormattedDate from "../shared/components/formatted-date/FormattedDate.astro";
import Footer from "../core/footer/components/Footer.astro";
import DarkButton from "../shared/components/switch-theme-icon-button/SwitchThemeIconButton.astro";
import HctPicker from "../shared/components/theme-changer/HctPicker.vue";

type Props = CollectionEntry<"blog">["data"];

const { title, description, creationTime, tags } = Astro.props;
---

<html lang="en">
    <head>
        <BaseHead
            title={`${title}`}
            description={description}
        />
    </head>

    <body class="surface relative">
        <header id="blog-top-app-bar-ref">
            <md-icon-button
                id="blog-top-app-bar-back-button-ref"
                aria-label="Back to last page"
            >
                <md-icon>arrow_back</md-icon>
            </md-icon-button>
            <span>
                <h1
                    id="blog-top-app-bar-title-ref"
                    class="md-typescale-title-medium"
                >
                    {title}
                </h1>
            </span>

            <div class="actions">
                <DarkButton />
                <HctPicker client:only="vue" />
            </div>
            <div aria-hidden="true" class="absolute inset-0 bottom-0">
                <md-linear-progress
                    id="blog-reading-progress-ref"
                    value="0"
                    aria-label="Reading progress bar"></md-linear-progress>
            </div>
        </header>

        <main id="blog-prose-ref">
            <section class="article-header">
                <h1 id="blog-title-ref" class="md-typescale-display-large">
                    {title}
                </h1>
                <p
                    id="blog-createtion-time-ref"
                    class="md-typescale-body-small"
                >
                    <FormattedDate date={creationTime} />
                </p>
                <ul id="blog-tags-ref" class="md-typescale-body-small">
                    {tags?.map((tag) => <li class="">{tag}</li>)}
                </ul>
                <p id="blog-description-ref" class="md-typescale-body-medium">
                    {description}
                </p>
            </section>

            <div class="my-32" aria-hidden="true">
                <svg
                    aria-hidden="true"
                    width="100%"
                    height="8"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    ><pattern
                        id="a"
                        width="91"
                        height="8"
                        patternUnits="userSpaceOnUse"
                        ><g clip-path="url(#clip0_2426_11367)"
                            ><path
                                d="M114 4c-5.067 4.667-10.133 4.667-15.2 0S88.667-.667 83.6 4 73.467 8.667 68.4 4 58.267-.667 53.2 4 43.067 8.667 38 4 27.867-.667 22.8 4 12.667 8.667 7.6 4-2.533-.667-7.6 4s-10.133 4.667-15.2 0S-32.933-.667-38 4s-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0-10.133-4.667-15.2 0-10.133 4.667-15.2 0"
                                stroke="#E1E3E1"
                                stroke-linecap="square"></path></g
                        ></pattern
                    ><rect width="100%" height="100%" fill="url(#a)"></rect>
                </svg>
            </div>

            <section id="blog-content-ref" class="md-typescale-body-large">
                <slot />
            </section>
        </main>

        <Footer />

        <script>
            import type {
                MdIconButton,
                MdLinearProgress,
            } from "@material/web/all";

            const topAppbar = document.querySelector("#blog-top-app-bar-ref")!;
            const title = document.querySelector("#blog-title-ref")!;

            const handleScrolled = (e: Event) => {
                const top = (e.target as Document).scrollingElement!.scrollTop!;

                updateTopAppbar(top);
                updateTitle(top);
            };

            const updateTopAppbar = (scrollPosition: number) => {
                if (scrollPosition >= 56) {
                    topAppbar?.classList.add("on-scroll");
                } else {
                    topAppbar?.classList.remove("on-scroll");
                }
            };

            const updateTitle = (scrollPosition: number) => {
                if (scrollPosition >= title.clientHeight!) {
                    topAppbar?.classList.add("title-appeared");
                } else {
                    topAppbar?.classList.remove("title-appeared");
                }
            };

            window.addEventListener("scroll", handleScrolled);

            const progress = document.querySelector(
                "#blog-reading-progress-ref",
            ) as MdLinearProgress;
            window.addEventListener("scroll", (e: Event) => {
                const windowHeight = window.innerHeight;
                const pageHeight = document.body.clientHeight - windowHeight;
                const currentHeight = Math.abs(
                    (
                        e.target as Document
                    ).scrollingElement!.getBoundingClientRect().y,
                );

                const percent = currentHeight / pageHeight;

                progress.value = percent;
            });

            const backButton = document.querySelector(
                "#blog-top-app-bar-back-button-ref",
            ) as MdIconButton;
            backButton.addEventListener("click", () => {
                window.location.replace("/post-list");
            });
        </script>
    </body>
</html>
